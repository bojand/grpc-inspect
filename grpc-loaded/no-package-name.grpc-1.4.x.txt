{ HelloRequest: 
   { [Function: Message]
     encode: [Function],
     decode: [Function],
     decodeDelimited: [Function],
     decode64: [Function],
     decodeHex: [Function],
     decodeJSON: [Function] },
  HelloReply: 
   { [Function: Message]
     encode: [Function],
     decode: [Function],
     decodeDelimited: [Function],
     decode64: [Function],
     decodeHex: [Function],
     decodeJSON: [Function] },
  Greeter: 
   { [Function: ServiceClient]
     super_: [Function: Client],
     service: 
      { sayHello: 
         { originalName: 'SayHello',
           path: '/Greeter/SayHello',
           requestStream: false,
           responseStream: false,
           requestType: 
            T {
              builder: 
               Builder {
                 ns: 
                  T {
                    builder: [Circular],
                    parent: null,
                    name: '',
                    className: 'Namespace',
                    children: 
                     [ [Circular],
                       T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'HelloReply',
                         className: 'Message',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'message',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'message',
                              element: [Object],
                              keyElement: null } ],
                         options: {},
                         syntax: 'proto3',
                         extensions: undefined,
                         clazz: 
                          { [Function: Message]
                            encode: [Function],
                            decode: [Function],
                            decodeDelimited: [Function],
                            decode64: [Function],
                            decodeHex: [Function],
                            decodeJSON: [Function] },
                         isGroup: false,
                         _fields: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'message',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'message',
                              element: [Object],
                              keyElement: null } ],
                         _fieldsById: 
                          { '1': 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'message',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'message',
                               element: [Object],
                               keyElement: null } },
                         _fieldsByName: 
                          { message: 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'message',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'message',
                               element: [Object],
                               keyElement: null } },
                         _oneofsByName: {} },
                       T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'Greeter',
                         className: 'Service',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'SayHello',
                              className: 'Service.RPCMethod',
                              options: {},
                              requestName: 'HelloRequest',
                              responseName: 'HelloReply',
                              requestStream: false,
                              responseStream: false,
                              resolvedRequestType: [Circular],
                              resolvedResponseType: [Object] } ],
                         options: {},
                         syntax: 'proto2',
                         clazz: null } ],
                    options: {},
                    syntax: 'proto2' },
                 ptr: 
                  T {
                    builder: [Circular],
                    parent: null,
                    name: '',
                    className: 'Namespace',
                    children: 
                     [ [Circular],
                       T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'HelloReply',
                         className: 'Message',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'message',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'message',
                              element: [Object],
                              keyElement: null } ],
                         options: {},
                         syntax: 'proto3',
                         extensions: undefined,
                         clazz: 
                          { [Function: Message]
                            encode: [Function],
                            decode: [Function],
                            decodeDelimited: [Function],
                            decode64: [Function],
                            decodeHex: [Function],
                            decodeJSON: [Function] },
                         isGroup: false,
                         _fields: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'message',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'message',
                              element: [Object],
                              keyElement: null } ],
                         _fieldsById: 
                          { '1': 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'message',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'message',
                               element: [Object],
                               keyElement: null } },
                         _fieldsByName: 
                          { message: 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'message',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'message',
                               element: [Object],
                               keyElement: null } },
                         _oneofsByName: {} },
                       T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'Greeter',
                         className: 'Service',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'SayHello',
                              className: 'Service.RPCMethod',
                              options: {},
                              requestName: 'HelloRequest',
                              responseName: 'HelloReply',
                              requestStream: false,
                              responseStream: false,
                              resolvedRequestType: [Circular],
                              resolvedResponseType: [Object] } ],
                         options: {},
                         syntax: 'proto2',
                         clazz: null } ],
                    options: {},
                    syntax: 'proto2' },
                 resolved: false,
                 result: null,
                 files: 
                  { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                 importRoot: null,
                 options: { convertFieldsToCamelCase: false, populateAccessors: true } },
              parent: 
               T {
                 builder: 
                  Builder {
                    ns: [Circular],
                    ptr: [Circular],
                    resolved: false,
                    result: null,
                    files: 
                     { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                    importRoot: null,
                    options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                 parent: null,
                 name: '',
                 className: 'Namespace',
                 children: 
                  [ [Circular],
                    T {
                      builder: 
                       Builder {
                         ns: [Circular],
                         ptr: [Circular],
                         resolved: false,
                         result: null,
                         files: 
                          { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                         importRoot: null,
                         options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                      parent: [Circular],
                      name: 'HelloReply',
                      className: 'Message',
                      children: 
                       [ T {
                           builder: 
                            Builder {
                              ns: [Circular],
                              ptr: [Circular],
                              resolved: false,
                              result: null,
                              files: [Object],
                              importRoot: null,
                              options: [Object] },
                           parent: [Circular],
                           name: 'message',
                           className: 'Message.Field',
                           required: false,
                           repeated: false,
                           map: false,
                           keyType: null,
                           type: { name: 'string', wireType: 2, defaultValue: '' },
                           resolvedType: null,
                           id: 1,
                           options: {},
                           defaultValue: '',
                           oneof: null,
                           syntax: 'proto3',
                           originalName: 'message',
                           element: 
                            Element {
                              type: [Object],
                              resolvedType: null,
                              isMapKey: false,
                              syntax: 'proto3',
                              name: 'message' },
                           keyElement: null } ],
                      options: {},
                      syntax: 'proto3',
                      extensions: undefined,
                      clazz: 
                       { [Function: Message]
                         encode: [Function],
                         decode: [Function],
                         decodeDelimited: [Function],
                         decode64: [Function],
                         decodeHex: [Function],
                         decodeJSON: [Function] },
                      isGroup: false,
                      _fields: 
                       [ T {
                           builder: 
                            Builder {
                              ns: [Circular],
                              ptr: [Circular],
                              resolved: false,
                              result: null,
                              files: [Object],
                              importRoot: null,
                              options: [Object] },
                           parent: [Circular],
                           name: 'message',
                           className: 'Message.Field',
                           required: false,
                           repeated: false,
                           map: false,
                           keyType: null,
                           type: { name: 'string', wireType: 2, defaultValue: '' },
                           resolvedType: null,
                           id: 1,
                           options: {},
                           defaultValue: '',
                           oneof: null,
                           syntax: 'proto3',
                           originalName: 'message',
                           element: 
                            Element {
                              type: [Object],
                              resolvedType: null,
                              isMapKey: false,
                              syntax: 'proto3',
                              name: 'message' },
                           keyElement: null } ],
                      _fieldsById: 
                       { '1': 
                          T {
                            builder: 
                             Builder {
                               ns: [Circular],
                               ptr: [Circular],
                               resolved: false,
                               result: null,
                               files: [Object],
                               importRoot: null,
                               options: [Object] },
                            parent: [Circular],
                            name: 'message',
                            className: 'Message.Field',
                            required: false,
                            repeated: false,
                            map: false,
                            keyType: null,
                            type: { name: 'string', wireType: 2, defaultValue: '' },
                            resolvedType: null,
                            id: 1,
                            options: {},
                            defaultValue: '',
                            oneof: null,
                            syntax: 'proto3',
                            originalName: 'message',
                            element: 
                             Element {
                               type: [Object],
                               resolvedType: null,
                               isMapKey: false,
                               syntax: 'proto3',
                               name: 'message' },
                            keyElement: null } },
                      _fieldsByName: 
                       { message: 
                          T {
                            builder: 
                             Builder {
                               ns: [Circular],
                               ptr: [Circular],
                               resolved: false,
                               result: null,
                               files: [Object],
                               importRoot: null,
                               options: [Object] },
                            parent: [Circular],
                            name: 'message',
                            className: 'Message.Field',
                            required: false,
                            repeated: false,
                            map: false,
                            keyType: null,
                            type: { name: 'string', wireType: 2, defaultValue: '' },
                            resolvedType: null,
                            id: 1,
                            options: {},
                            defaultValue: '',
                            oneof: null,
                            syntax: 'proto3',
                            originalName: 'message',
                            element: 
                             Element {
                               type: [Object],
                               resolvedType: null,
                               isMapKey: false,
                               syntax: 'proto3',
                               name: 'message' },
                            keyElement: null } },
                      _oneofsByName: {} },
                    T {
                      builder: 
                       Builder {
                         ns: [Circular],
                         ptr: [Circular],
                         resolved: false,
                         result: null,
                         files: 
                          { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                         importRoot: null,
                         options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                      parent: [Circular],
                      name: 'Greeter',
                      className: 'Service',
                      children: 
                       [ T {
                           builder: 
                            Builder {
                              ns: [Circular],
                              ptr: [Circular],
                              resolved: false,
                              result: null,
                              files: [Object],
                              importRoot: null,
                              options: [Object] },
                           parent: [Circular],
                           name: 'SayHello',
                           className: 'Service.RPCMethod',
                           options: {},
                           requestName: 'HelloRequest',
                           responseName: 'HelloReply',
                           requestStream: false,
                           responseStream: false,
                           resolvedRequestType: [Circular],
                           resolvedResponseType: 
                            T {
                              builder: [Object],
                              parent: [Circular],
                              name: 'HelloReply',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} } } ],
                      options: {},
                      syntax: 'proto2',
                      clazz: null } ],
                 options: {},
                 syntax: 'proto2' },
              name: 'HelloRequest',
              className: 'Message',
              children: 
               [ T {
                   builder: 
                    Builder {
                      ns: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloReply',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      ptr: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloReply',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      resolved: false,
                      result: null,
                      files: 
                       { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                      importRoot: null,
                      options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                   parent: [Circular],
                   name: 'name',
                   className: 'Message.Field',
                   required: false,
                   repeated: false,
                   map: false,
                   keyType: null,
                   type: { name: 'string', wireType: 2, defaultValue: '' },
                   resolvedType: null,
                   id: 1,
                   options: {},
                   defaultValue: '',
                   oneof: null,
                   syntax: 'proto3',
                   originalName: 'name',
                   element: 
                    Element {
                      type: { name: 'string', wireType: 2, defaultValue: '' },
                      resolvedType: null,
                      isMapKey: false,
                      syntax: 'proto3',
                      name: 'name' },
                   keyElement: null } ],
              options: {},
              syntax: 'proto3',
              extensions: undefined,
              clazz: 
               { [Function: Message]
                 encode: [Function],
                 decode: [Function],
                 decodeDelimited: [Function],
                 decode64: [Function],
                 decodeHex: [Function],
                 decodeJSON: [Function] },
              isGroup: false,
              _fields: 
               [ T {
                   builder: 
                    Builder {
                      ns: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloReply',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      ptr: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloReply',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      resolved: false,
                      result: null,
                      files: 
                       { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                      importRoot: null,
                      options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                   parent: [Circular],
                   name: 'name',
                   className: 'Message.Field',
                   required: false,
                   repeated: false,
                   map: false,
                   keyType: null,
                   type: { name: 'string', wireType: 2, defaultValue: '' },
                   resolvedType: null,
                   id: 1,
                   options: {},
                   defaultValue: '',
                   oneof: null,
                   syntax: 'proto3',
                   originalName: 'name',
                   element: 
                    Element {
                      type: { name: 'string', wireType: 2, defaultValue: '' },
                      resolvedType: null,
                      isMapKey: false,
                      syntax: 'proto3',
                      name: 'name' },
                   keyElement: null } ],
              _fieldsById: 
               { '1': 
                  T {
                    builder: 
                     Builder {
                       ns: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloReply',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       ptr: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloReply',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       resolved: false,
                       result: null,
                       files: 
                        { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                       importRoot: null,
                       options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                    parent: [Circular],
                    name: 'name',
                    className: 'Message.Field',
                    required: false,
                    repeated: false,
                    map: false,
                    keyType: null,
                    type: { name: 'string', wireType: 2, defaultValue: '' },
                    resolvedType: null,
                    id: 1,
                    options: {},
                    defaultValue: '',
                    oneof: null,
                    syntax: 'proto3',
                    originalName: 'name',
                    element: 
                     Element {
                       type: { name: 'string', wireType: 2, defaultValue: '' },
                       resolvedType: null,
                       isMapKey: false,
                       syntax: 'proto3',
                       name: 'name' },
                    keyElement: null } },
              _fieldsByName: 
               { name: 
                  T {
                    builder: 
                     Builder {
                       ns: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloReply',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       ptr: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloReply',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       resolved: false,
                       result: null,
                       files: 
                        { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                       importRoot: null,
                       options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                    parent: [Circular],
                    name: 'name',
                    className: 'Message.Field',
                    required: false,
                    repeated: false,
                    map: false,
                    keyType: null,
                    type: { name: 'string', wireType: 2, defaultValue: '' },
                    resolvedType: null,
                    id: 1,
                    options: {},
                    defaultValue: '',
                    oneof: null,
                    syntax: 'proto3',
                    originalName: 'name',
                    element: 
                     Element {
                       type: { name: 'string', wireType: 2, defaultValue: '' },
                       resolvedType: null,
                       isMapKey: false,
                       syntax: 'proto3',
                       name: 'name' },
                    keyElement: null } },
              _oneofsByName: {} },
           responseType: 
            T {
              builder: 
               Builder {
                 ns: 
                  T {
                    builder: [Circular],
                    parent: null,
                    name: '',
                    className: 'Namespace',
                    children: 
                     [ T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'HelloRequest',
                         className: 'Message',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'name',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'name',
                              element: [Object],
                              keyElement: null } ],
                         options: {},
                         syntax: 'proto3',
                         extensions: undefined,
                         clazz: 
                          { [Function: Message]
                            encode: [Function],
                            decode: [Function],
                            decodeDelimited: [Function],
                            decode64: [Function],
                            decodeHex: [Function],
                            decodeJSON: [Function] },
                         isGroup: false,
                         _fields: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'name',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'name',
                              element: [Object],
                              keyElement: null } ],
                         _fieldsById: 
                          { '1': 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'name',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'name',
                               element: [Object],
                               keyElement: null } },
                         _fieldsByName: 
                          { name: 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'name',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'name',
                               element: [Object],
                               keyElement: null } },
                         _oneofsByName: {} },
                       [Circular],
                       T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'Greeter',
                         className: 'Service',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'SayHello',
                              className: 'Service.RPCMethod',
                              options: {},
                              requestName: 'HelloRequest',
                              responseName: 'HelloReply',
                              requestStream: false,
                              responseStream: false,
                              resolvedRequestType: [Object],
                              resolvedResponseType: [Circular] } ],
                         options: {},
                         syntax: 'proto2',
                         clazz: null } ],
                    options: {},
                    syntax: 'proto2' },
                 ptr: 
                  T {
                    builder: [Circular],
                    parent: null,
                    name: '',
                    className: 'Namespace',
                    children: 
                     [ T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'HelloRequest',
                         className: 'Message',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'name',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'name',
                              element: [Object],
                              keyElement: null } ],
                         options: {},
                         syntax: 'proto3',
                         extensions: undefined,
                         clazz: 
                          { [Function: Message]
                            encode: [Function],
                            decode: [Function],
                            decodeDelimited: [Function],
                            decode64: [Function],
                            decodeHex: [Function],
                            decodeJSON: [Function] },
                         isGroup: false,
                         _fields: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'name',
                              className: 'Message.Field',
                              required: false,
                              repeated: false,
                              map: false,
                              keyType: null,
                              type: [Object],
                              resolvedType: null,
                              id: 1,
                              options: {},
                              defaultValue: '',
                              oneof: null,
                              syntax: 'proto3',
                              originalName: 'name',
                              element: [Object],
                              keyElement: null } ],
                         _fieldsById: 
                          { '1': 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'name',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'name',
                               element: [Object],
                               keyElement: null } },
                         _fieldsByName: 
                          { name: 
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'name',
                               className: 'Message.Field',
                               required: false,
                               repeated: false,
                               map: false,
                               keyType: null,
                               type: [Object],
                               resolvedType: null,
                               id: 1,
                               options: {},
                               defaultValue: '',
                               oneof: null,
                               syntax: 'proto3',
                               originalName: 'name',
                               element: [Object],
                               keyElement: null } },
                         _oneofsByName: {} },
                       [Circular],
                       T {
                         builder: [Circular],
                         parent: [Circular],
                         name: 'Greeter',
                         className: 'Service',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'SayHello',
                              className: 'Service.RPCMethod',
                              options: {},
                              requestName: 'HelloRequest',
                              responseName: 'HelloReply',
                              requestStream: false,
                              responseStream: false,
                              resolvedRequestType: [Object],
                              resolvedResponseType: [Circular] } ],
                         options: {},
                         syntax: 'proto2',
                         clazz: null } ],
                    options: {},
                    syntax: 'proto2' },
                 resolved: false,
                 result: null,
                 files: 
                  { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                 importRoot: null,
                 options: { convertFieldsToCamelCase: false, populateAccessors: true } },
              parent: 
               T {
                 builder: 
                  Builder {
                    ns: [Circular],
                    ptr: [Circular],
                    resolved: false,
                    result: null,
                    files: 
                     { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                    importRoot: null,
                    options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                 parent: null,
                 name: '',
                 className: 'Namespace',
                 children: 
                  [ T {
                      builder: 
                       Builder {
                         ns: [Circular],
                         ptr: [Circular],
                         resolved: false,
                         result: null,
                         files: 
                          { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                         importRoot: null,
                         options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                      parent: [Circular],
                      name: 'HelloRequest',
                      className: 'Message',
                      children: 
                       [ T {
                           builder: 
                            Builder {
                              ns: [Circular],
                              ptr: [Circular],
                              resolved: false,
                              result: null,
                              files: [Object],
                              importRoot: null,
                              options: [Object] },
                           parent: [Circular],
                           name: 'name',
                           className: 'Message.Field',
                           required: false,
                           repeated: false,
                           map: false,
                           keyType: null,
                           type: { name: 'string', wireType: 2, defaultValue: '' },
                           resolvedType: null,
                           id: 1,
                           options: {},
                           defaultValue: '',
                           oneof: null,
                           syntax: 'proto3',
                           originalName: 'name',
                           element: 
                            Element {
                              type: [Object],
                              resolvedType: null,
                              isMapKey: false,
                              syntax: 'proto3',
                              name: 'name' },
                           keyElement: null } ],
                      options: {},
                      syntax: 'proto3',
                      extensions: undefined,
                      clazz: 
                       { [Function: Message]
                         encode: [Function],
                         decode: [Function],
                         decodeDelimited: [Function],
                         decode64: [Function],
                         decodeHex: [Function],
                         decodeJSON: [Function] },
                      isGroup: false,
                      _fields: 
                       [ T {
                           builder: 
                            Builder {
                              ns: [Circular],
                              ptr: [Circular],
                              resolved: false,
                              result: null,
                              files: [Object],
                              importRoot: null,
                              options: [Object] },
                           parent: [Circular],
                           name: 'name',
                           className: 'Message.Field',
                           required: false,
                           repeated: false,
                           map: false,
                           keyType: null,
                           type: { name: 'string', wireType: 2, defaultValue: '' },
                           resolvedType: null,
                           id: 1,
                           options: {},
                           defaultValue: '',
                           oneof: null,
                           syntax: 'proto3',
                           originalName: 'name',
                           element: 
                            Element {
                              type: [Object],
                              resolvedType: null,
                              isMapKey: false,
                              syntax: 'proto3',
                              name: 'name' },
                           keyElement: null } ],
                      _fieldsById: 
                       { '1': 
                          T {
                            builder: 
                             Builder {
                               ns: [Circular],
                               ptr: [Circular],
                               resolved: false,
                               result: null,
                               files: [Object],
                               importRoot: null,
                               options: [Object] },
                            parent: [Circular],
                            name: 'name',
                            className: 'Message.Field',
                            required: false,
                            repeated: false,
                            map: false,
                            keyType: null,
                            type: { name: 'string', wireType: 2, defaultValue: '' },
                            resolvedType: null,
                            id: 1,
                            options: {},
                            defaultValue: '',
                            oneof: null,
                            syntax: 'proto3',
                            originalName: 'name',
                            element: 
                             Element {
                               type: [Object],
                               resolvedType: null,
                               isMapKey: false,
                               syntax: 'proto3',
                               name: 'name' },
                            keyElement: null } },
                      _fieldsByName: 
                       { name: 
                          T {
                            builder: 
                             Builder {
                               ns: [Circular],
                               ptr: [Circular],
                               resolved: false,
                               result: null,
                               files: [Object],
                               importRoot: null,
                               options: [Object] },
                            parent: [Circular],
                            name: 'name',
                            className: 'Message.Field',
                            required: false,
                            repeated: false,
                            map: false,
                            keyType: null,
                            type: { name: 'string', wireType: 2, defaultValue: '' },
                            resolvedType: null,
                            id: 1,
                            options: {},
                            defaultValue: '',
                            oneof: null,
                            syntax: 'proto3',
                            originalName: 'name',
                            element: 
                             Element {
                               type: [Object],
                               resolvedType: null,
                               isMapKey: false,
                               syntax: 'proto3',
                               name: 'name' },
                            keyElement: null } },
                      _oneofsByName: {} },
                    [Circular],
                    T {
                      builder: 
                       Builder {
                         ns: [Circular],
                         ptr: [Circular],
                         resolved: false,
                         result: null,
                         files: 
                          { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                         importRoot: null,
                         options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                      parent: [Circular],
                      name: 'Greeter',
                      className: 'Service',
                      children: 
                       [ T {
                           builder: 
                            Builder {
                              ns: [Circular],
                              ptr: [Circular],
                              resolved: false,
                              result: null,
                              files: [Object],
                              importRoot: null,
                              options: [Object] },
                           parent: [Circular],
                           name: 'SayHello',
                           className: 'Service.RPCMethod',
                           options: {},
                           requestName: 'HelloRequest',
                           responseName: 'HelloReply',
                           requestStream: false,
                           responseStream: false,
                           resolvedRequestType: 
                            T {
                              builder: [Object],
                              parent: [Circular],
                              name: 'HelloRequest',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                           resolvedResponseType: [Circular] } ],
                      options: {},
                      syntax: 'proto2',
                      clazz: null } ],
                 options: {},
                 syntax: 'proto2' },
              name: 'HelloReply',
              className: 'Message',
              children: 
               [ T {
                   builder: 
                    Builder {
                      ns: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloRequest',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      ptr: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloRequest',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      resolved: false,
                      result: null,
                      files: 
                       { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                      importRoot: null,
                      options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                   parent: [Circular],
                   name: 'message',
                   className: 'Message.Field',
                   required: false,
                   repeated: false,
                   map: false,
                   keyType: null,
                   type: { name: 'string', wireType: 2, defaultValue: '' },
                   resolvedType: null,
                   id: 1,
                   options: {},
                   defaultValue: '',
                   oneof: null,
                   syntax: 'proto3',
                   originalName: 'message',
                   element: 
                    Element {
                      type: { name: 'string', wireType: 2, defaultValue: '' },
                      resolvedType: null,
                      isMapKey: false,
                      syntax: 'proto3',
                      name: 'message' },
                   keyElement: null } ],
              options: {},
              syntax: 'proto3',
              extensions: undefined,
              clazz: 
               { [Function: Message]
                 encode: [Function],
                 decode: [Function],
                 decodeDelimited: [Function],
                 decode64: [Function],
                 decodeHex: [Function],
                 decodeJSON: [Function] },
              isGroup: false,
              _fields: 
               [ T {
                   builder: 
                    Builder {
                      ns: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloRequest',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      ptr: 
                       T {
                         builder: [Circular],
                         parent: null,
                         name: '',
                         className: 'Namespace',
                         children: 
                          [ T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'HelloRequest',
                              className: 'Message',
                              children: [Array],
                              options: {},
                              syntax: 'proto3',
                              extensions: undefined,
                              clazz: [Object],
                              isGroup: false,
                              _fields: [Array],
                              _fieldsById: [Object],
                              _fieldsByName: [Object],
                              _oneofsByName: {} },
                            [Circular],
                            T {
                              builder: [Circular],
                              parent: [Circular],
                              name: 'Greeter',
                              className: 'Service',
                              children: [Array],
                              options: {},
                              syntax: 'proto2',
                              clazz: null } ],
                         options: {},
                         syntax: 'proto2' },
                      resolved: false,
                      result: null,
                      files: 
                       { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                      importRoot: null,
                      options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                   parent: [Circular],
                   name: 'message',
                   className: 'Message.Field',
                   required: false,
                   repeated: false,
                   map: false,
                   keyType: null,
                   type: { name: 'string', wireType: 2, defaultValue: '' },
                   resolvedType: null,
                   id: 1,
                   options: {},
                   defaultValue: '',
                   oneof: null,
                   syntax: 'proto3',
                   originalName: 'message',
                   element: 
                    Element {
                      type: { name: 'string', wireType: 2, defaultValue: '' },
                      resolvedType: null,
                      isMapKey: false,
                      syntax: 'proto3',
                      name: 'message' },
                   keyElement: null } ],
              _fieldsById: 
               { '1': 
                  T {
                    builder: 
                     Builder {
                       ns: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloRequest',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       ptr: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloRequest',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       resolved: false,
                       result: null,
                       files: 
                        { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                       importRoot: null,
                       options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                    parent: [Circular],
                    name: 'message',
                    className: 'Message.Field',
                    required: false,
                    repeated: false,
                    map: false,
                    keyType: null,
                    type: { name: 'string', wireType: 2, defaultValue: '' },
                    resolvedType: null,
                    id: 1,
                    options: {},
                    defaultValue: '',
                    oneof: null,
                    syntax: 'proto3',
                    originalName: 'message',
                    element: 
                     Element {
                       type: { name: 'string', wireType: 2, defaultValue: '' },
                       resolvedType: null,
                       isMapKey: false,
                       syntax: 'proto3',
                       name: 'message' },
                    keyElement: null } },
              _fieldsByName: 
               { message: 
                  T {
                    builder: 
                     Builder {
                       ns: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloRequest',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       ptr: 
                        T {
                          builder: [Circular],
                          parent: null,
                          name: '',
                          className: 'Namespace',
                          children: 
                           [ T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'HelloRequest',
                               className: 'Message',
                               children: [Array],
                               options: {},
                               syntax: 'proto3',
                               extensions: undefined,
                               clazz: [Object],
                               isGroup: false,
                               _fields: [Array],
                               _fieldsById: [Object],
                               _fieldsByName: [Object],
                               _oneofsByName: {} },
                             [Circular],
                             T {
                               builder: [Circular],
                               parent: [Circular],
                               name: 'Greeter',
                               className: 'Service',
                               children: [Array],
                               options: {},
                               syntax: 'proto2',
                               clazz: null } ],
                          options: {},
                          syntax: 'proto2' },
                       resolved: false,
                       result: null,
                       files: 
                        { '/Users/bdjurkovic/dev/nodejs/grpc-inspect/test/protos/no-package-name.proto': true },
                       importRoot: null,
                       options: { convertFieldsToCamelCase: false, populateAccessors: true } },
                    parent: [Circular],
                    name: 'message',
                    className: 'Message.Field',
                    required: false,
                    repeated: false,
                    map: false,
                    keyType: null,
                    type: { name: 'string', wireType: 2, defaultValue: '' },
                    resolvedType: null,
                    id: 1,
                    options: {},
                    defaultValue: '',
                    oneof: null,
                    syntax: 'proto3',
                    originalName: 'message',
                    element: 
                     Element {
                       type: { name: 'string', wireType: 2, defaultValue: '' },
                       resolvedType: null,
                       isMapKey: false,
                       syntax: 'proto3',
                       name: 'message' },
                    keyElement: null } },
              _oneofsByName: {} },
           requestSerialize: [Function: serialize],
           requestDeserialize: [Function: deserialize],
           responseSerialize: [Function: serialize],
           responseDeserialize: [Function: deserialize] } } } }